[toplevel]

cfn     = cloudformation
conf    = configure
regions = ec2 describe-regions --query 'Regions[].RegionName[]' --output text
whoami  = sts get-caller-identity


[command cloudformation]

ls = describe-stacks --query 'Stacks[].[StackName,StackStatus]'

rm = delete-stack --stack-name

head = describe-stack-events \
  --max-items 10 \
  --query 'StackEvents[].[
    Timestamp,
    ResourceType,
    ResourceStatus
  ]' \
  --stack-name


[command configure]

ls = list-profiles


[command ec2]

keys = describe-key-pairs --query 'KeyPairs[].[KeyName,KeyPairId,KeyType,KeyFingerprint]'

find = !f() {
    instance=${1:?expected instance type argument}
    echo "Locating regions with ${instance}..."
    for region in $(aws regions); do
      aws ec2 describe-instance-types --region $region --instance-types $instance &> /dev/null
      [[ $? -eq 0 ]] && echo $region
    done
  }; f

ls = describe-instances \
  --query 'Reservations[].Instances[].[
    InstanceType,
    InstanceId,
    Tags[?Key==`Name`]|[0].Value,
    PublicIpAddress || `-`,
    PrivateIpAddress,
    NetworkInterfaces[?InterfaceType==`efa`]|[0].InterfaceType || `-`,
    Placement.AvailabilityZone,
    State.Name
  ] | sort_by(@, &[0])'

lsefa = describe-instance-types \
  --filters Name=network-info.efa-supported,Values=true \
  --query 'InstanceTypes[].[
    InstanceType,
   [VCpuInfo.DefaultVCpus.to_string(@), `vCPUs`].join(`\u0020`,@),
    ProcessorInfo.[
     [SustainedClockSpeedInGhz.to_string(@), `GHz`].join(`\u0020`,@),
      SupportedArchitectures[0]
    ],
   [MemoryInfo.SizeInMiB.to_string(@), `MiB`].join(`\u0020`,@),
    FpgaInfo && `FPGA` || GpuInfo && `GPU` || InferenceAcceleratorInfo && `Inf` || `-`,
   (FpgaInfo.Fpgas || GpuInfo.Gpus || InferenceAcceleratorInfo.Accelerators)[0].[
      Count,
     [Manufacturer, Name].join(`\u0020`,@),
      MemoryInfo && [MemoryInfo.SizeInMiB.to_string(@), `MiB`].join(`\u0020`,@) || `-`
    ] || [`-`,`-`,`-`],
    NetworkInfo.[
     [EfaInfo.MaximumEfaInterfaces.to_string(@), `EFA`].join(`\u0020`,@),
      NetworkPerformance
    ]
  ] | map(&[], @) | sort_by(@, &[0])'

lsefa-global = !f() {
    echo "Finding instance types with EFA support in all regions (this may take a while)..."
    for region in $(aws regions); do
      echo "${region}:"
      aws ec2 lsefa --region $region
      echo ""
    done
  }; f

lspc = describe-instances \
  --filters 'Name=tag-key,Values=parallelcluster:version' \
  --query 'Reservations[].Instances[].[
    Tags[?Key==`parallelcluster:cluster-name`]|[0].Value,
    InstanceType,
    Tags[?Key==`parallelcluster:node-type`&&Value==`HeadNode`] && `-` || [
      Tags[?Key==`parallelcluster:queue-name`]|[0].Value,
      Tags[?Key==`parallelcluster:compute-resource-name`]|[0].Value
    ].join(`:`,@),
    PublicIpAddress || PrivateIpAddress,
    Placement.AvailabilityZone,
    InstanceId,
    Tags[?Key==`parallelcluster:version`]|[0].Value,
    State.Name
  ] | sort_by(sort_by(@, &[1]), &[0])'
