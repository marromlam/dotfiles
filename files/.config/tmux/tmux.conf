# ------------------------------------------------------------------------------
# the very basics {{{

# Set default shell to zsh
set-option -g default-shell /bin/zsh

# Force tmux to use utf-8
setw -gq utf8 on

# Reload tmux conf
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# Set out terminal
# you are overriding within tmux this value MUST
# refer to the $TERM type of the emulator you are using
set -g default-terminal "${TERM}"
# tmux pass through
set -gq allow-passthrough all
# set -gq allow-passthrough on
set -s extended-keys on
set -as terminal-features 'xterm*:extkeys'
set-option -g status-interval 10

# set -g pane-border-lines "rounded"


# Fingers {{{

# Enable mouse support
set -g mouse on

# set -g @fingers-copy-command 'xclip -selection clipboard'
# set -g @fingers-key f

# }}}


# Undercurl in tmux {{{

# Allow undercurls for terminals that support them.
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# Allow coloured undercurls for terminals that support them.
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
set -g popup-border-lines rounded
# set-hook -g -w pane-focus-in "set-option -Fw pane-border-status '#{?#{e|>:#{window_panes},1},top,off}'"
# }}}


# configuring basic behavior {{{

# Report a title to external programs
set-option -g set-titles on
# set-option -g set-titles-string "❐ #S"
set-option -g set-titles-string "tmux"
# set-option -g set-titles-string '❐ #S ● #I'

# title bar is better on top
set-option -g status-position bottom

# automatically renumber tmux windows
set -g renumber-windows on
set-option -g allow-rename on

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

# Activity Monitoring
setw -g monitor-activity on
set -g visual-activity off

# unbind default prefix and set it to Ctrl+a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# make delay shorter -- was fixed for WSL
set -sg escape-time 0

# set vi mode for copy mode
setw -g mode-keys vi
# bind Escape copy-mode

# Setup 'v' to begin selection as in Vim
if-shell -b '[[ "$OSTYPE" == "darwin"* ]]' \
        'COPY_CMD="pbcopy"' \
        'COPY_CMD="xclip -se c -i"'
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "#{COPY_CMD}"

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

set -sg repeat-time 600 # increase repeat-time
set -g display-time 1000 # tmux messages are displayed for one second
set -g status-interval 20

# increase scrollback buffer size
set -g history-limit 100000

set -g focus-events on

# }}}

# }}}
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Bindings keys {{{
# ------------------------------------------------------------------------------

bind C-f command-prompt -p find-session 'switch-client -t %%' #find session

# Navigate windows using shift left and right
bind p previous-window
bind n next-window

# Navigate sessions using option left and right
# bind -n M-Left  switch-client -p
# bind -n M-Right switch-client -n

# split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# detach client
bind-key d detach
bind-key C-d detach

# Resize pane shortcuts
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# synchronize all panes in a window
bind y setw synchronize-panes

# toggle statusbar
bind-key b set-option status

# close popups

# }}}
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Plugins {{{
# ------------------------------------------------------------------------------

# Custom dir outside of .dotfiles
set-environment -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.local/share/tmux/plugins"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

# Sensible tmux defaults
set -g @plugin 'tmux-plugins/tmux-sensible'

# Yanks to the system keyboard
set -g @plugin 'tmux-plugins/tmux-yank'
# Fancy copy
# set -g @plugin 'Morantron/tmux-fingers'
# set -g @fingers-copy-command 'xclip -selection clipboard'
# set -g @fingers-key f

# Common bindings
# set -g @plugin 'tmux-plugins/tmux-pain-control'

# Allows path picking from any tmux window content
set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'jbnicolai/tmux-fpp'
# set -g @fpp-bind off  # disable default binding
# bind-key f run-shell '~/.tmux/plugins/tmux-fpp start edit'  # launch
# bind-key x run-shell '~/.tmux/plugins/tmux-fpp start paste'  # paste

# Navigate between panes and vim splits
set -g @plugin 'marromlam/sailor.vim'

# some utilities
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-online-status'    # Are we connected to the internet?!
# set -g @plugin 'wfxr/tmux-power'
# set -g @plugin 'wfxr/tmux-net-speed'p
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'MunifTanjim/tmux-mode-indicator'

# utitlities for other apps
set -g @plugin 'robhurring/tmux-spotify'

set -g @plugin 'tardunge/tmux-gh'
set-option -g @tmux_gh_icon ""
set-option -g @tmux_gh_default_uname "marromlam"

# Pomodoro
set -g @plugin 'olimorris/tmux-pomodoro-plus'
set -g @pomodoro_on "#[fg=red] "
set -g @pomodoro_complete "#[fg=green] "
set -g @pomodoro_pause "#[fg=yellow] "
set -g @pomodoro_prompt_pomodoro "#[fg=$color_gray]  ?"

# Theme
# set -g @plugin 'egel/tmux-gruvbox'
# set -g @plugin 'odedlaz/tmux-onedark-theme'
# set -g @plugin 'lawabidingcactus/tmux-gruvbox-truecolor'
# source $HOME/.config/tmux/theme.conf
source $HOME/.config/tmux/perico.conf


# Tmux restore system
# Tmux session bindings and session related features
set -g @plugin 'tmux-plugins/tmux-sessionist'

# Tmux resurect
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes 'ssh nvim'

# Restores n/vim sessions
# set -g @resurrect-strategy-nvim 'session'
# set -g @resurrect-processes '"nvim->nvim +SLoad"'


# }}}
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Binding scripts {{{
# ------------------------------------------------------------------------------

# unbind s
bind-key -r i run-shell "tmux neww $HOME/.dotfiles/scripts/tmux-cheat"
bind T run-shell ~/.config/tmux/switch-theme
# bind-key -r § run-shell "tmux neww $HOME/.dotfiles/scripts/tmux-windowizer.sh"
# bind-key -r § run-shell "tmux neww $HOME/fzf-panes.tmux new_window"
#
# bind-key f run-shell '~/.tmux/plugins/tmux-fpp/fpp.tmux start edit'
bind-key f run-shell 'tmux neww $HOME/.dotfiles/scripts/tmux-pe'

# window swictcher
# bind-key -r w run-shell "$HOME/fzf-panes.tmux new_window"
# bind-key -r w run-shell "tmux neww bash $HOME/fzft"
bind-key -r w run-shell "tmux neww bash $HOME/.dotfiles/scripts/tmux-sessionizer"
# bind-key -r e run-shell 'tmux popup -E -w 80% -h 80% "$HOME/.dotfiles/files/.config/tmux/vifm.sh"'
# bind-key -r e display-popup -w 80% -h 80% -E "$HOME/.dotfiles/files/.config/tmux/vifm.sh"
# bind-key -r e run-shell -E '(TMUX_POPUP=1 && tmux display-popup -w 80% -h 80% "$HOME/.dotfiles/files/.config/tmux/vifm.sh") &> /dev/null'

bind "'" if-shell -F '#{==:#{session_name},scratch}' { 
    detach-client 
  } { 
    if-shell "tmux has-session -t scratch" {
      display-popup -E "tmux attach-session -t scratch"
    } {
      display-popup -E "tmux new-session -d -c '#{pane_current_path}' -s scratch && tmux set-option -t scratch status off && tmux attach-session -t scratch"
    }
}

bind "e" if-shell -F '#{==:#{session_name},pasta}' { 
    detach-client 
  } { 
    display-popup -w 80% -h 80% -E -w 80% -h 80% "$HOME/.dotfiles/files/.config/tmux/vifm.sh"
}



# bind-key -r g run-shell "tmux popup $HOME/.dotfiles/scripts/tmux-sessionizer"
# bind-key -r § run-shell -b $HOME/.dotfiles/scripts/tmux-windowizer.sh
# bind-key -r s run-shell "bash $HOME/.dotfiles/scripts/tmux-sessionizer"
# bind -t vi-copy y copy-pipe "xargs -I{} tmux send-keys -t 1 ';edit {}' Enter && tmux select-pane -t 1"
# bind-key -T copy-mode-vi 'C-o' send-keys -X copy-pipe-and-cancel "vim $(tmux paste-buffer)"
bind G run-shell "tmux switch-client -t gh-dash || tmux new-session -d -s gh-dash -c '$HOME' gh dash && tmux switch-client -t gh-dash"


# }}}
# ------------------------------------------------------------------------------

# Initialize TMUX plugin manager
run -b '$HOME/.local/share/tmux/plugins/tpm/tpm'

# vim: fdm=marker
