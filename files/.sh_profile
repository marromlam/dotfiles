################################################################################
#          ______                                  _____________ ______      
#  ___________  /_         ________ ______________ ___  __/___(_)___  /_____ 
#  __  ___/__  __ \        ___  __ \__  ___/_  __ \__  /_  __  / __  / _  _ \
#  _(__  ) _  / / /        __  /_/ /_  /    / /_/ /_  __/  _  /  _  /  /  __/
#  /____/  /_/ /_/ _________  .___/ /_/     \____/ /_/     /_/   /_/   \___/ 
#                  _/_____//_/ 
#
#  Marcos Romero Lamas
#
#  sh configuration profile. This file is writen to be used both for bash and
#  zsh shells
#
################################################################################

### Source bashrc
##source "$HOME/.bashrc"
##
### Source local bashrc
##if [ -f "$HOME/.bashrc.local" ]; then
##  source "$HOME/.bashrc.local"
##fi

if [ MACHINEOS=='Mac' ]; then
  # macOS now shows a deprecation warning about bash, remove it
  export BASH_SILENCE_DEPRECATION_WARNING=1
else
  # sometimes in linux colors don't show up
  alias ls="ls --color='auto'"
fi

# Shell ------------------------------------------------------------------------ 
if [ `echo $0`=="bash" ]; then
  export THISSHELL="bash"
else
  export THISSHELL="zsh"
fi

# Set editor
export EDITOR='nvim'

# Alias
alias clc="clear && printf '\e[3J'"   # clear terminal window and clean history
alias ll="ls -lrth"                                    # show list of directory
#alias tree="ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'"



# Include git information in FZF preview --------------------------------------
#export FZF_PREVIEW_COMMAND='bat {}'
#export FZF_DEFAULT_OPTS="
#  --color=dark
#  --color=fg:-1,bg:-1,hl:#5fff87,fg+:-1,bg+:-1,hl+:#ffaf5f
#  --color=info:#af87ff,prompt:#5fff87,pointer:#ff87d7,marker:#ff87d7,spinner:#ff87d7
#  --bind ctrl-a:select-all,ctrl-d:deselect-all,tab:toggle+up,shift-tab:toggle+down
#"



# Ripgrep configuration file --------------------------------------------------
export RIPGREP_CONFIG_PATH=$HOME/.config/ripgrep/rc



# Enable completions ---------------------------------------------------------- 

# Homebrew completions
#source $(brew --prefix)/etc/bash_completion
# Fzf completions
#source "/usr/local/opt/fzf/shell/completion.bash"
#source "/usr/local/opt/fzf/shell/key-bindings.bash"



# Environment managers --------------------------------------------------------
# pyenv here!




# Alternative to lemonade -----------------------------------------------------

_dt_term_socket_ssh() {
    ssh -oControlPath=$1 -O exit DUMMY_HOST
}
function sshx {
  #local t=$(mktemp -u --tmpdir=$HOME ssh.sock.XXXXXXXXXX)
  local t=$(mktemp -u -d "/Users/marcos/ssh.sock.XXXXXXXXXX")
  local f="~/clip"
  ssh -f -oControlMaster=yes -oControlPath=$t $@ tail\ -f\ /dev/null || return 1
  ssh -S$t DUMMY_HOST "bash -c 'if ! [ -p $f ]; then mkfifo $f; fi'" \
      || { _dt_term_socket_ssh $t; return 1; }
  (
  set -e
  set -o pipefail
  while [ 1 ]; do
      ssh -S$t DUMMY_HOST "cat $f" | xclip -selection clipboard
  done &
  )
  ssh -S$t DUMMY_HOST \
      || { _dt_term_socket_ssh $t; return 1; }
  ssh -S$t DUMMY_HOST "rm $f"
  _dt_term_socket_ssh $t
}



# Atom functions --------------------------------------------------------------
#    These functions...

#Â open a port where jupyter can run kernels
launch_jupyter(){
  jupyter notebook --no-browser --port=8$1 &
}

# kill jupyter sessions
alias kill_jupyter="kill $(netstat -tulpn 2>&1 | pgrep jupyter)"



# LaTeX -----------------------------------------------------------------------
export TEXINPUTS=".:~/beamer-compostela:"



# Some functions --------------------------------------------------------------
function get_machine() {
  unameOut="$(uname -s)"
  case "${unameOut}" in
    Linux*)     machine=Linux;;
    Darwin*)    machine=Mac;;
    CYGWIN*)    machine=Cygwin;;
    MINGW*)     machine=MinGw;;
    *)          machine="UNKNOWN:${unameOut}"
  esac
  echo ${machine}
}
